{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const create = (tag, token) => {\n  return fetch(`${API}/api/admin/tag`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(tag)\n  }).then(response => response.json()).catch(err => console.log(err));\n};\nexport const getTags = () => {\n  return fetch(`${API}/api/admin/tags`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const singleTag = slug => {\n  return fetch(`${API}/api/admin/tag/${slug}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removetag = (slug, token) => {\n  return fetch(`${API}/api/admin/rm/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/jahnvi/My stuff/SeoBlog/client/actions/tag.js"],"names":["fetch","API","cookie","create","tag","token","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getTags","singleTag","slug","removetag"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,MAAMC,MAAM,GAAC,CAACC,GAAD,EAAKC,KAAL,KAAa;AAG7B,SAAOL,KAAK,CAAE,GAAEC,GAAI,gBAAR,EAAwB;AAChCK,IAAAA,MAAM,EAAC,MADyB;AAEhCC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH3B,KAFwB;AAOhCK,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,GAAf;AAP2B,GAAxB,CAAL,CAUNS,IAVM,CAUDC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAVT,EAWNC,KAXM,CAWAC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXL,CAAP;AAYH,CAfM;AAkBP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAOpB,KAAK,CAAE,GAAEC,GAAI,iBAAR,EAA0B;AAClCK,IAAAA,MAAM,EAAE;AAD0B,GAA1B,CAAL,CAGFO,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOH,CARM;AAUP,OAAO,MAAMI,SAAS,GAAGC,IAAI,IAAI;AAC7B,SAAOtB,KAAK,CAAE,GAAEC,GAAI,kBAAiBqB,IAAK,EAA9B,EAAiC;AACzChB,IAAAA,MAAM,EAAE;AADiC,GAAjC,CAAL,CAGFO,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOH,CARM;AAUP,OAAO,MAAMM,SAAS,GAAG,CAACD,IAAD,EAAOjB,KAAP,KAAiB;AACtC,SAAOL,KAAK,CAAE,GAAEC,GAAI,iBAAgBqB,IAAK,EAA7B,EAAgC;AACxChB,IAAAA,MAAM,EAAE,QADgC;AAExCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH1B;AAF+B,GAAhC,CAAL,CAQFQ,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport {API} from '../config';\nimport cookie from 'js-cookie';\nexport const create=(tag,token)=>{\n\n   \n    return fetch(`${API}/api/admin/tag`,{\n        method:'POST',\n        headers:{\n            Accept:'application/json',\n            'Content-type':'application/json',\n            Authorization :`Bearer ${token}`\n        },\n        body:JSON.stringify(tag)\n\n    })\n    .then(response=>response.json())\n    .catch(err=>console.log(err))\n};\n\n\nexport const getTags = () => {\n    return fetch(`${API}/api/admin/tags`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const singleTag = slug => {\n    return fetch(`${API}/api/admin/tag/${slug}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const removetag = (slug, token) => {\n    return fetch(`${API}/api/admin/rm/${slug}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}