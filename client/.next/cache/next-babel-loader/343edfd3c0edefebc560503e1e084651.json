{"ast":null,"code":"var _jsxFileName = \"/home/jahnvi/My stuff/SeoBlog/client/pages/auth/account/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../../components/layout';\nimport { withRouter } from 'next/router';\nimport { signup } from '../../../actions/auth';\n\nconst ActivateAccount = ({\n  router\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    token: '',\n    error: '',\n    loading: false,\n    success: false,\n    showButton: true\n  });\n  const {\n    name,\n    token,\n    error,\n    loading,\n    success,\n    showButton\n  } = values;\n  useEffect(() => {\n    let token = router.query.id;\n\n    if (token) {\n      const {\n        name\n      } = jwt.decode(token);\n      setValues(_objectSpread({}, values, {\n        name,\n        token\n      }));\n    }\n  }, [router]);\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      loading: true,\n      error: false\n    }));\n    signup({\n      token\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          loading: false,\n          showButton: false\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          loading: false,\n          success: true,\n          showButton: false\n        }));\n      }\n    });\n  };\n\n  const showLoading = () => loading ? __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Loading...\") : '';\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"pb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Hey \", name, \", Ready to activate your account?\"), showLoading(), error && error, success && 'You have successfully activated your account. Please signin.', showButton && __jsx(\"button\", {\n    className: \"btn btn-outline-primary\",\n    onClick: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Activate Account\")));\n};\n\nexport default withRouter(ActivateAccount);","map":{"version":3,"sources":["/home/jahnvi/My stuff/SeoBlog/client/pages/auth/account/[id].js"],"names":["useState","useEffect","jwt","Layout","withRouter","signup","ActivateAccount","router","values","setValues","name","token","error","loading","success","showButton","query","id","decode","clickSubmit","e","preventDefault","then","data","showLoading"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACjCU,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,OAAO,EAAE,KAJwB;AAKjCC,IAAAA,OAAO,EAAE,KALwB;AAMjCC,IAAAA,UAAU,EAAE;AANqB,GAAD,CAApC;AASA,QAAM;AAAEL,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA;AAAxC,MAAuDP,MAA7D;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,GAAGJ,MAAM,CAACS,KAAP,CAAaC,EAAzB;;AACA,QAAIN,KAAJ,EAAW;AACP,YAAM;AAAED,QAAAA;AAAF,UAAWR,GAAG,CAACgB,MAAJ,CAAWP,KAAX,CAAjB;AACAF,MAAAA,SAAS,mBAAMD,MAAN;AAAcE,QAAAA,IAAd;AAAoBC,QAAAA;AAApB,SAAT;AACH;AACJ,GANQ,EAMN,CAACJ,MAAD,CANM,CAAT;;AAQA,QAAMY,WAAW,GAAGC,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,SAAS,mBAAMD,MAAN;AAAcK,MAAAA,OAAO,EAAE,IAAvB;AAA6BD,MAAAA,KAAK,EAAE;AAApC,OAAT;AACAP,IAAAA,MAAM,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAN,CAAkBW,IAAlB,CAAuBC,IAAI,IAAI;AAC3B,UAAIA,IAAI,CAACX,KAAT,EAAgB;AACZH,QAAAA,SAAS,mBAAMD,MAAN;AAAcI,UAAAA,KAAK,EAAEW,IAAI,CAACX,KAA1B;AAAiCC,UAAAA,OAAO,EAAE,KAA1C;AAAiDE,UAAAA,UAAU,EAAE;AAA7D,WAAT;AACH,OAFD,MAEO;AACHN,QAAAA,SAAS,mBAAMD,MAAN;AAAcK,UAAAA,OAAO,EAAE,KAAvB;AAA8BC,UAAAA,OAAO,EAAE,IAAvC;AAA6CC,UAAAA,UAAU,EAAE;AAAzD,WAAT;AACH;AACJ,KAND;AAOH,GAVD;;AAYA,QAAMS,WAAW,GAAG,MAAOX,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAyB,EAA3D;;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BH,IAA1B,sCADJ,EAEKc,WAAW,EAFhB,EAGKZ,KAAK,IAAIA,KAHd,EAIKE,OAAO,IAAI,8DAJhB,EAKKC,UAAU,IACP;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEI,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANR,CADJ,CADJ;AAeH,CAjDD;;AAmDA,eAAef,UAAU,CAACE,eAAD,CAAzB","sourcesContent":["import { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../../components/layout';\nimport { withRouter } from 'next/router';\nimport { signup } from '../../../actions/auth';\n\nconst ActivateAccount = ({ router }) => {\n    const [values, setValues] = useState({\n        name: '',\n        token: '',\n        error: '',\n        loading: false,\n        success: false,\n        showButton: true\n    });\n\n    const { name, token, error, loading, success, showButton } = values;\n\n    useEffect(() => {\n        let token = router.query.id;\n        if (token) {\n            const { name } = jwt.decode(token);\n            setValues({ ...values, name, token });\n        }\n    }, [router]);\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setValues({ ...values, loading: true, error: false });\n        signup({ token }).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, loading: false, showButton: false });\n            } else {\n                setValues({ ...values, loading: false, success: true, showButton: false });\n            }\n        });\n    };\n\n    const showLoading = () => (loading ? <h2>Loading...</h2> : '');\n\n    return (\n        <Layout>\n            <div className=\"container\">\n                <h3 className=\"pb-4\">Hey {name}, Ready to activate your account?</h3>\n                {showLoading()}\n                {error && error}\n                {success && 'You have successfully activated your account. Please signin.'}\n                {showButton && (\n                    <button className=\"btn btn-outline-primary\" onClick={clickSubmit}>\n                        Activate Account\n                    </button>\n                )}\n            </div>\n        </Layout>\n    );\n};\n\nexport default withRouter(ActivateAccount);"]},"metadata":{},"sourceType":"module"}