{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nimport { isAuth, handleResponse } from './auth';\nexport var create = function create(category, token) {\n  return fetch(\"\".concat(API, \"/api/admin/category\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: _JSON$stringify(category)\n  }).then(function (response) {\n    handleResponse(response);\n    response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var getCategories = function getCategories() {\n  return fetch(\"\".concat(API, \"/api/admin/categories\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleCategory = function singleCategory(slug) {\n  return fetch(\"\".concat(API, \"/api/admin/category/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    //      console.log(response.json())\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeCategory = function removeCategory(slug, token) {\n  return fetch(\"\".concat(API, \"/api/admin/\").concat(slug), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/jahnvi/My stuff/SeoBlog/client/actions/category.js"],"names":["fetch","API","cookie","isAuth","handleResponse","create","category","token","method","headers","Accept","Authorization","body","then","response","json","err","console","log","getCategories","singleCategory","slug","removeCategory"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,MAAT,EAAgBC,cAAhB,QAAsC,QAAtC;AACA,OAAO,IAAMC,MAAM,GAAC,SAAPA,MAAO,CAACC,QAAD,EAAUC,KAAV,EAAkB;AAElC,SAAOP,KAAK,WAAIC,GAAJ,0BAA6B;AACrCO,IAAAA,MAAM,EAAC,MAD8B;AAErCC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHT,KAF6B;AAOrCK,IAAAA,IAAI,EAAC,gBAAeN,QAAf;AAPgC,GAA7B,CAAL,CAUNO,IAVM,CAUD,UAAAC,QAAQ,EAAE;AACZV,IAAAA,cAAc,CAACU,QAAD,CAAd;AACAA,IAAAA,QAAQ,CAACC,IAAT;AAAgB,GAZb,WAaA,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAbH,CAAP;AAcH,CAhBM;AAmBP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAOnB,KAAK,WAAIC,GAAJ,4BAAgC;AACxCO,IAAAA,MAAM,EAAE;AADgC,GAAhC,CAAL,CAGFK,IAHE,CAGG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,WAMI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GANP,CAAP;AAOH,CARM;AAUP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAClC,SAAOrB,KAAK,WAAIC,GAAJ,iCAA8BoB,IAA9B,GAAsC;AAC9Cb,IAAAA,MAAM,EAAE;AADsC,GAAtC,CAAL,CAIFK,IAJE,CAIG,UAAAC,QAAQ,EAAI;AACpB;AACK,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACF,GAPE,WAQI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GARP,CAAP;AASH,CAVM;AAYP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACD,IAAD,EAAOd,KAAP,EAAiB;AAC3C,SAAOP,KAAK,WAAIC,GAAJ,wBAAqBoB,IAArB,GAA6B;AACrCb,IAAAA,MAAM,EAAE,QAD6B;AAErCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHR;AAF4B,GAA7B,CAAL,CAQFM,IARE,CAQG,UAAAC,QAAQ,EAAI;AACdV,IAAAA,cAAc,CAACU,QAAD,CAAd;AACA,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,WAYI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAZP,CAAP;AAaH,CAdM","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport {API} from '../config';\nimport cookie from 'js-cookie';\nimport { isAuth,handleResponse } from './auth';\nexport const create=(category,token)=>{\n   \n    return fetch(`${API}/api/admin/category`,{\n        method:'POST',\n        headers:{\n            Accept:'application/json',\n            'Content-type':'application/json',\n            Authorization :`Bearer ${token}`\n        },\n        body:JSON.stringify(category)\n\n    })\n    .then(response=>{\n        handleResponse(response);\n        response.json()})\n    .catch(err=>console.log(err))\n};\n\n\nexport const getCategories = () => {\n    return fetch(`${API}/api/admin/categories`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const singleCategory = slug => {\n    return fetch(`${API}/api/admin/category/${slug}`, {\n        method: 'GET'\n    })\n\n        .then(response => {\n      //      console.log(response.json())\n           return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const removeCategory = (slug, token) => {\n    return fetch(`${API}/api/admin/${slug}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            handleResponse(response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}