{"version":3,"file":"static/webpack/static/development/pages/user/update.js.f3b7228470ac4672208a.hot-update.js","sources":["webpack:///./components/auth/ProfileUpdate.js"],"sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\nimport { API } from '../../config';\n \nconst ProfileUpdate = () => {\n    const [values, setValues] = useState({\n        username: '',\n        username_for_photo: '',\n        name: '',\n        email: '',\n        about: '',\n        password: '',\n        error: false,\n        success: false,\n        loading: false,\n        photo: '',\n        userData: process.browser && new FormData()\n    });\n \n    const token = getCookie('token');\n    const {\n        username,\n        username_for_photo,\n        name,\n        email,\n        about,\n        password,\n        error,\n        success,\n        loading,\n        photo,\n        userData\n    } = values;\n \n    const init = () => {\n        getProfile(token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    username_for_photo: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about\n                });\n            }\n        });\n    };\n \n    useEffect(() => {\n        init();\n        setValues({ ...values, userData: new FormData() });\n    }, []);\n \n    const handleChange = name => e => {\n        // console.log(e.target.value);\n        const value = name === 'photo' ? e.target.files[0] : e.target.value;\n        // let userData = new FormData();\n        userData.set(name, value);\n        console.log(...userData); // SEE THE FORMDATA IN CONSOLE\n        setValues({ ...values, [name]: value, userData, error: false, success: false });\n    };\n \n    const handleSubmit = e => {\n        e.preventDefault();\n \n        setValues({ ...values, loading: true });\n        update(token, userData).then(data => {\n            if (data.error) {\n                console.log('data.error', data.error);\n                setValues({ ...values, error: data.error, loading: false });\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        username: data.username,\n                        name: data.name,\n                        email: data.email,\n                        about: data.about,\n                        password: '',\n                        success: true,\n                        loading: false\n                    });\n                });\n            }\n        });\n    };\n \n    const profileUpdateForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"btn btn-outline-info\">\n                    Profile photo\n                    <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n                </label>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Username</label>\n                <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n            </div>\n            {/*<div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n            </div>*/}\n            <div className=\"form-group\">\n                <label className=\"text-muted\">About</label>\n                <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\n            </div>\n            <div>\n                {/* {showSuccess()}\n                {showError()}\n                {showLoading()} */}\n            </div>\n            <div>\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={!username || !name || !email}>\n                    Update\n                </button>\n            </div>\n        </form>\n    );\n \n    const showError = () => (\n        <div className=\"alert alert-danger\" >\n            {error}\n        </div>\n    );\n \n    const showSuccess = () => (\n        <div className=\"alert alert-success\" >\n            Profile updated\n        </div>\n    );\n \n    const showLoading = () => (\n        <div className=\"alert alert-info\" >\n            Loading...\n        </div>\n    );\n \n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <img\n                            src={`${API}/user/photo/${username_for_photo}`}\n                            className=\"img img-fluid img-thumbnail mb-3\"\n                          \n                            alt=\"user profile\"\n                        />\n                    </div>\n                    <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n \nexport default ProfileUpdate;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AADA;AAAA;AACA;AAcA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA6BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAPA;AACA;AAQA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlCA;AACA;AAwCA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}