{"version":3,"file":"static/webpack/static/development/pages/admin/crud/blog.js.a7c5a7beb9492fc44366.hot-update.js","sources":["webpack:///./components/crud/blogcreate.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { getCookie } from '../../actions/auth';\nimport dynamic from 'next/dynamic';\nimport { getCategories, create } from '../../actions/category';\nimport { createBlog } from '../../actions/blog';\nimport { getTags } from '../../actions/tag';\nconst ReactQuill=dynamic(()=>import('react-quill'),{ssr:false})\nimport '../../node_modules/react-quill/dist/quill.snow.css'\n// import ReactQuill from 'react-quill';\n//import 'react-quill/dist/quill.snow.css';\nconst CreateBlog = ({router}) => {\n    const blogFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n\n        if (localStorage.getItem('blog')) {\n            return JSON.parse(localStorage.getItem('blog'));\n        } else {\n            return false;\n        }\n    };\n    const token = getCookie('token');\n    const [categories, setCategories] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [body, setBody] = useState(blogFromLS());\n\n    const [checked, setChecked] = useState([]); // categories\n    const [checkedTag, setCheckedTag] = useState([]); // tags\n    const [values, setValues] = useState({\n        error: '',\n        sizeError: '',\n        success: '',\n        formData: '',\n        title: '',\n        hidePublishButton: false\n    });\n    const { error, sizeError, success, formData, title, hidePublishButton } = values;\n  useEffect(()=>{\n      setValues({...values,formData:new FormData()});\n      initCategories();\n      initTags();\n  },[router])\n    const publishBlog=(e)=>{\n      e.preventDefault()\n      console.log(formData.get('categories'))\n    //   createBlog(formData, token).then(data => {\n    //     if (data.error) {\n    //         console.log(data.error)\n    //         setValues({ ...values, error: data.error });\n    //     } else {\n    //         setValues({ ...values, title: '', error: '', success: `A new blog titled \"${data.title}\" is created` });\n    //         setBody('');\n    //         setCategories([]);\n    //         setTags([]);\n    //     }\n    // });\n  }\n  const handleToggle = c => () => {\n    setValues({ ...values, error: '' });\n    // return the first index or -1\n    const clickedCategory = checked.indexOf(c);\n    const all = [...checked];\n\n    if (clickedCategory === -1) {\n        all.push(c);\n    } else {\n        all.splice(clickedCategory, 1);\n    }\n    console.log(all);\n    setChecked(all);\n    formData.set('categories', all);\n    console.log(formData.get('categories'))\n};\nconst handleTagsToggle = t => () => {\n    setValues({ ...values, error: '' });\n    // return the first index or -1\n    const clickedTag = checked.indexOf(t);\n    const all = [...checkedTag];\n\n    if (clickedTag === -1) {\n        all.push(t);\n    } else {\n        all.splice(clickedTag, 1);\n    }\n    console.log(all);\n    setCheckedTag(all);\n    formData.set('tags', all);\n};\n  const handleChange=name=>e=>{\nconsole.log(e.target.value)\nconst value=name===\"photo\"?e.target.files[0]:e.target.value;\nformData.set(name,value)\nsetValues({...values,[name]:value,formData,error:\"\"})\n  }\n  const initCategories = () => {\n    getCategories().then(data => {\n        if (data.error) {\n            setValues({ ...values, error: data.error });\n        } else {\n            setCategories(data);\n        }\n    });\n};\n\nconst initTags = () => {\n    getTags().then(data => {\n        if (data.error) {\n            setValues({ ...values, error: data.error });\n        } else {\n            setTags(data);\n        }\n    });\n};\nconst showCategories = () => {\n    return (\n        categories &&\n        categories.map((c, i) => (\n            <li key={i} className=\"list-unstyled\">\n                <input type=\"checkbox\" onChange={handleToggle(c._id)} className=\"mr-2\" />\n                <label className=\"form-check-label\">{c.name}</label>\n            </li>\n        ))\n    );\n};\n\nconst showTags = () => {\n    return (\n        tags &&\n        tags.map((t, i) => (\n            <li key={i} className=\"list-unstyled\">\n                <input type=\"checkbox\" onChange={handleTagsToggle(t._id)} className=\"mr-2\" />\n                <label className=\"form-check-label\">{t.name}</label>\n            </li>\n        ))\n    );\n};\n  const handleBody=e=>{\n    setBody(e);\n    formData.set('body', e);\n    if (typeof window !== 'undefined') {\n\n        localStorage.setItem('blog', JSON.stringify(e));\n    }\n      }\n      const showError=()=>(\n          <div className=\"alert-alert-danger\" style={{display:error?'':'none'}}>{error}</div>\n      )\n      const showSuccess=()=>(\n        <div className=\"alert-alert-success\" style={{display:success?'':'none'}}>{success}</div>\n    )\n const CreateBlogForm=()=>{\n     return(\n         <form onSubmit={publishBlog}>\n<div className=\"form-group\">\n    <label className=\"text-muted\">Title</label>\n    <input type=\"text\" className=\"form-control\" onChange={handleChange('title')}/>\n</div>\n<div className=\"form-group\">\n <ReactQuill modules={CreateBlog.modules} formats={CreateBlog.formats} value={body} placeholder=\"write something...\" onChange={handleBody} />\n</div>\n\n<div className=\"form-group\">\n <button type=\"submit\" className=\"btn-btn-primary\">Publish</button>\n</div>\n         </form>\n     )\n }\n  \n    return (\n         <div className=\"container-fluid\">\n                <div className=\"row\">\n                <div className=\"col-md-8\">\n\n               {showError()}\n               {showSuccess()}\n            {CreateBlogForm()} \n         \n        </div>\n        <div className=\"col-md-4\">\n        <div>\n\n<div>\n<div className=\"form-group pb-2\">\n                            <h5>Featured image</h5>\n                            <hr />\n\n                            <small className=\"text-muted\">Max size: 1mb</small>\n                            <label className=\"btn btn-outline-info\">\n                                Upload featured image\n                                <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n                            </label>\n                        </div>\n</div>\n\n                        <h5>Categories</h5>\n                        <hr />\n\n                        <ul style={{ maxHeight: '200px', overflowY: 'scroll' }}>{showCategories()}</ul>\n                    </div>\n                    <div>\n                        <h5>Tags</h5>\n                        <hr />\n                        <ul style={{ maxHeight: '200px', overflowY: 'scroll' }}>{showTags()}</ul>\n                    </div>\n    \n</div>\n\n        </div>\n        </div>\n    );\n};\nCreateBlog.modules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['code-block']\n    ]\n};\n \nCreateBlog.formats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'link',\n    'image',\n    'video',\n    'code-block'\n];\nexport default CreateBlog;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA,iBAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAbA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAoBA;AACA;AACA;AACA;AACA;AACA;AANA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAfA;AACA;AAeA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAdA;AACA;AAcA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AALA;AAYA;AAgBA;;;;A","sourceRoot":""}